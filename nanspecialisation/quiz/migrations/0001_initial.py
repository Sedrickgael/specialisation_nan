# Generated by Django 2.2.7 on 2019-11-19 17:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('niveau', models.PositiveIntegerField()),
                ('contenu', tinymce.models.HTMLField(verbose_name='question_contenu')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='Quizz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('titre', models.CharField(max_length=50)),
                ('niveau', models.PositiveIntegerField()),
                ('pourcentage', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='pourcentage pour valider')),
                ('nbq', models.PositiveIntegerField(null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Nombre de questions par quizz')),
                ('date_debut', models.DateTimeField()),
                ('date_fin', models.DateTimeField()),
                ('duree', models.TimeField()),
            ],
            options={
                'verbose_name': 'Quizz',
                'verbose_name_plural': 'Quizzs',
            },
        ),
        migrations.CreateModel(
            name='QuizzUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('note', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('quizz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzuser', to='quiz.Quizz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'QuizzUser',
                'verbose_name_plural': 'QuizzUsers',
            },
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('contenu', tinymce.models.HTMLField(verbose_name='reponse_contenu')),
                ('isrtue', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponses', to='quiz.Question')),
            ],
            options={
                'verbose_name': 'Reponse',
                'verbose_name_plural': 'Reponses',
            },
        ),
        migrations.CreateModel(
            name='Specialisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('nom', models.CharField(max_length=50)),
                ('langage', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Specialisation',
                'verbose_name_plural': 'Specialisations',
            },
        ),
        migrations.CreateModel(
            name='ReponseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('istrue', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reponseuser', to='quiz.Question')),
                ('quizzuser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quiz.QuizzUser')),
                ('reponses', models.ManyToManyField(to='quiz.Reponse')),
            ],
            options={
                'verbose_name': 'ReponseUser',
                'verbose_name_plural': 'ReponseUsers',
            },
        ),
        migrations.AddField(
            model_name='quizz',
            name='specialisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzs', to='quiz.Specialisation'),
        ),
        migrations.AddField(
            model_name='question',
            name='quizz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quiz.Quizz'),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.BooleanField(default=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(default='omar-sy-by-rachel.jpg', upload_to='profile')),
                ('moyenne_generale', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('specialisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='quiz.Specialisation')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserProfile',
                'verbose_name_plural': 'UserProfiles',
            },
        ),
    ]
